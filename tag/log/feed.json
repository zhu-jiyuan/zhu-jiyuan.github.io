{
    "version": "https://jsonfeed.org/version/1",
    "title": "ohayo's blog • All posts by \"log\" tag",
    "description": null,
    "home_page_url": "https://blog.hayoo.org",
    "items": [
        {
            "id": "https://blog.hayoo.org/soft-router-is-joker/",
            "url": "https://blog.hayoo.org/soft-router-is-joker/",
            "title": "没必要的软路由",
            "date_published": "2024-04-29T14:35:48.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>小学到初二，家里的网线从宽带我世界的电话拨号，升级到了光纤，我的游戏事业也如日中天，形势一片大好之际，我爸妈把网线掐了，直到高中毕业，在此期间我攻坚克难、不畏艰险，先后破解了邻居家的WiFi密码，掉包率极高，在电竞黄金期，摧毁了我的电竞梦想。</p>\n<p>毕业后，第一次租房30m宽带，100块才能使用50m，恰好当时拿下了switch，下个塞尔达都要等一天，看直播不能玩游戏。直接给我整破防了。。。</p>\n<p>家里一定要有好的网络体验！</p>\n<p>以下是我认为好的网络体验。</p>\n<ul>\n<li>switch等学习机能全速下载</li>\n<li>全家设备能透明进行科学上网</li>\n<li>网络延迟要低，dns不能泄露</li>\n<li>稳定！稳定！稳定！</li>\n</ul>\n<h2 id=\"不值得的软路由\"><a class=\"markdownIt-Anchor\" href=\"#不值得的软路由\"></a> 不值得的软路由</h2>\n<p>混迹在各个论坛，经常会刷到软路由、n1等等帖子，通过这些帖子的描述，软路由其实就是一个功耗低一点的小电脑，通常会刷成openwrt、爱快这些系统，光猫网线连上它而后一起放入弱电箱，软路由再连路由器。</p>\n<p><img data-src=\"https://static.oover.dev/images/20240429231321.png\" alt=\"Pasted image 20240429231321.png\" /></p>\n<h3 id=\"软路由玩法\"><a class=\"markdownIt-Anchor\" href=\"#软路由玩法\"></a> 软路由玩法</h3>\n<p>软路由的配置可以自定义，通常要比路由器的配置高很多，举个例子，这些老哥通常会整一个x86的cpu、4g内存、128g存储的配置。然后在软路由里面安装docker、科学上网等工具，充当一个小服务器使用。</p>\n<p>比如它安装了科学上网，因为路由器的数据包要经过它，在软路由这一跳，会完成科学代理操作，这就实现了家中网络都能无感科学上网。</p>\n<p>功耗低费电少，cpu性能好，加上家里带宽一般都比较大，docker里面跑一些薅羊毛脚本，挂载alist等网盘，亦或是各种骚操作，完成可以充当服务器使用。</p>\n<hr />\n<p>每每看到这些帖子，我都忍不住想要去捡点这些垃圾，猛猛吃上几口。直到我了解到近年来mtk的arm cpu愈发强大，今非昔比。</p>\n<h2 id=\"硬路由足矣\"><a class=\"markdownIt-Anchor\" href=\"#硬路由足矣\"></a> 硬路由足矣！</h2>\n<p>硬路由其实就是我们平时所使用的路由器，早期路由器的cpu十分拉跨，忙中偷闲基本不可能，处理网络数据包都费劲。现在路由器cpu已经足够好了，且支持硬件加速。如此一来，软路由多了一跳，还没硬件加速，岂不是多次一举。</p>\n<p><img data-src=\"https://static.oover.dev/images/20240430100254.png\" alt=\"Pasted image 20240429231321.png\" /></p>\n<h2 id=\"硬路由玩法\"><a class=\"markdownIt-Anchor\" href=\"#硬路由玩法\"></a> 硬路由玩法</h2>\n<p>硬路由出厂的系统，基本都是基于openwrt做的深度魔改，主打一个稳定。想要安装科学上网等插件，是不可能滴。因此必须获得它的ssh权限，才能做老系统不敢做之事。</p>\n<p>本科期间搞了一台红米ax6，那台路由器，刷了openwrt之后，上网体验也是极好的，运行一些插件后，cpu完全能妥妥应对，只是没有2.5G口、不能玩docker等（因为存储小，无法扩容），略感遗憾。</p>\n<p>23年8月痛下死手，买了TP的6088，512MB运存， 64MB闪存，2个2.5G口，4个千兆，一个USB，配置在700的价位还算不错。usb接口可以插上ssd来增加存储，之后就能使用docker了。</p>\n<p>到手第一天，根据6088vpn漏洞，刷了<code>ImmortalWrt</code>，加上了一块128g的ssd，装了docker一些乱起八糟的插件，体验上并不好，毕竟只有512MB内存，加上很多插件存在一些bug，引起cpu飙升。</p>\n<p>在路由器上跑docker，是不可取的，all in one + 中心化，一旦路由器某个服务出现问题，家里直接没网。最终只保留了<code>mosdns，wireguard，homeproxy</code>以及自己用shell写的ddns。十分稳定，mtk确实可以，平均负载基本都是0。</p>\n<p><img data-src=\"https://static.oover.dev/images/20240430103013.png\" alt=\"Pasted image 20240430103013.png\" /></p>\n<h3 id=\"插件吐槽\"><a class=\"markdownIt-Anchor\" href=\"#插件吐槽\"></a> 插件吐槽</h3>\n<p>这里不得不插一嘴，插件的选择，其实openwrt很稳定的，搞懂之后，结合自己的路由器和一些老哥的前车之鉴做一些小调整，上网体验没得说。</p>\n<p>很多不稳定是插件导致的，比如最早我使用的openclash，因为fakeip导致平时网络工具经常无法正常使用，像ping等，折腾了许久配置，前前后后redirect等方案都在openclash上进行了尝试，然而还是会在使用几天后，莫名的国内访问延迟上涨，跳点大。甚至去读了一部分metaclash源码，写的很一般。后来换成了pw，pw更是卧龙凤雏，开启大陆优化，国内延迟会降到没开pw时的大小，和openclash一样，大概2天左右，就会跳点变大，cpu飙升。<br />\n结合日志，加上cpu和内存根本没到瓶颈，也不是mosdns的问题，不得其解。</p>\n<p>后来看到了sing-box内核，简单测试了一下，占用和性能都比clash要好，就选择了基于sing-box的homeproxy，仅仅踩了一些分流的坑，界面上也要简洁很多。国内速度和没开代理一样，用的bwg gia hy2，没感觉有晚高峰什么的，一直很流畅稳定。<br />\n（分流的坑是因为GPT网页开启了http/3，如果不开启udp服务器代理或者不禁用它，就无法正常使用。</p>\n<hr />\n<p>docker的需求都交给了腾讯云，通过ipv6 wireguard回家访问，而且硬路由还有硬件加速，实在想不出，软路由有什么好的，还多了一跳。</p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>路由器今非昔比，路由器有10胜，软路由有10败。</p>\n<p>路由器有硬件加速，软路由没有，此乃一胜。<br />\n路由器已经一胜了，软路由零胜，此乃二胜。<br />\n路由器已经二胜了，软路由零胜，此乃三胜。<br />\n路由器已经三胜了，软路由零胜，此乃四胜。<br />\n路由器已经四胜了，软路由零胜，此乃五胜。<br />\n路由器已经五胜了，软路由零胜，此乃六胜。<br />\n路由器已经六胜了，软路由零胜，此乃七胜。<br />\n路由器已经七胜了，软路由零胜，此乃八胜。<br />\n路由器已经八胜了，软路由零胜，此乃九胜。<br />\n路由器已经九胜了，软路由零胜，此乃十胜。</p>\n",
            "tags": [
                "openwrt",
                "log"
            ]
        },
        {
            "id": "https://blog.hayoo.org/log/hexo-log/",
            "url": "https://blog.hayoo.org/log/hexo-log/",
            "title": "hexo博客更新",
            "date_published": "2022-12-05T08:15:00.000Z",
            "content_html": "<h2 id=\"更新动机\"><a class=\"markdownIt-Anchor\" href=\"#更新动机\"></a> 更新动机</h2>\n<p>一直没找到写作、UI都让我感觉很舒服的主题。</p>\n<p>之前的主题很好看，有很多插件，更多的是用来写「笔记」或者「练习题」，因为写作很不方便，而且时不时渲染会出错，每次都要写好久，就有了这次的换主题。</p>\n<h2 id=\"以后安排\"><a class=\"markdownIt-Anchor\" href=\"#以后安排\"></a> 以后安排</h2>\n<p>之前的hexo主题，会写以后的错题、考试等等。<br />\n这个主题会记录数学、分享等等，同时会接着改造。</p>\n",
            "tags": [
                "log"
            ]
        },
        {
            "id": "https://blog.hayoo.org/log/openwrt/redmiAx6/",
            "url": "https://blog.hayoo.org/log/openwrt/redmiAx6/",
            "title": "折腾红米ax6",
            "date_published": "2022-04-30T12:47:11.000Z",
            "content_html": "<p>此篇记录一下前段时间折腾路由器的经历。哈哈哈哈哈，真是太爽了，路由器这东西，真上头。</p>\n<p>📍</p>\n<h1 id=\"选择路由器\"><a class=\"markdownIt-Anchor\" href=\"#选择路由器\"></a> 选择路由器</h1>\n<p>我选的是红米ax6，这款路由器，可以说是理财产品了，哈哈哈哈，价格一直涨，二手原价卖。就离谱。</p>\n<p>我主要是看重它以下几点</p>\n<ul>\n<li>芯片好，高通的芯片，散热刚刚滴~</li>\n<li>支持wifi6</li>\n<li>穿墙也不错</li>\n</ul>\n<p>加上看好碰见小米商城有货，我直接手起刀落。</p>\n<p>长个样子。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220505005059497.png\" alt=\"image-20220505005059497\" /></p>\n<h1 id=\"刷openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷openwrt\"></a> 刷openwrt</h1>\n<p>openwrt一个开源的路由器系统，可玩性强，深受“大家”喜爱，我也不例外，诶~，年轻就是折腾。</p>\n<p>我用的openwrt是直接在恩山下载一个网友的。不得不说，英雄所见略同。这个网友和我一样，只有一个需求，就是能科学上网就行啦。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430210845243.png\" alt=\"image-20220430210845243\" /></p>\n<p>插件这块大家可以自己装啦。</p>\n<p>米家的固件实在是苦不堪言，红米ax6跑千M网和玩一样，根本没有压力。我选择openwrt更高的自由度。</p>\n<h2 id=\"解锁ssh\"><a class=\"markdownIt-Anchor\" href=\"#解锁ssh\"></a> 解锁SSH</h2>\n<p>ax6最难刷机的原因就是SSH太难解。</p>\n<p>我是参考的b站这位网友给的教程，解锁的。<a href=\"https://www.bilibili.com/video/BV1q94y1f7fj\">视频链接</a></p>\n<p>我不是特别喜欢这个视频的风格，所以这里我简单概括一下他说的这些东西。</p>\n<ol>\n<li>\n<p>将AX6的固件降级为1.0.18版本</p>\n</li>\n<li>\n<p>红米ax6解锁需要一个openwrt路由（能上网的）。</p>\n</li>\n<li>\n<p>用虚拟机搭建一个openwrt系统的虚拟路由，就是开一个虚拟机。配置网络环境虚拟机网络环境</p>\n</li>\n<li>\n<p>上传wireless.sh文件到虚拟机，执行 sh /root/wireless.sh</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#wireless.sh如下</span>\n<span class=\"token comment\">#!/bin/ash</span>\n<span class=\"token comment\"># SPDX-License-Identifier: GPL-3.0-only</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Copyright (C) 2020 yyjdelete</span>\n<span class=\"token comment\"># Copyright (C) 2021 Robert Marko &lt;robimarko@gmail.com></span>\n<span class=\"token comment\"># Copyright (C) 2021 Tianling Shen &lt;cnsztl@immortalwrt.org></span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Original threads:</span>\n<span class=\"token comment\"># Redmi AX6 AX3000: https://www.right.com.cn/forum/thread-4060726-1-1.html</span>\n<span class=\"token comment\"># Xiaomi AX6000/AX9000: https://forum.openwrt.org/t/openwrt-support-for-xiaomi-ax9000/98908/34</span>\n\n<span class=\"token assign-left variable\">info_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[36m[Info]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token assign-left variable\">success_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m[Success]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token assign-left variable\">warning_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[33m[Warning]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure your router has wireless support!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure your router is restored to factory settings (not configured)!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure you've backed up the network and wireless settings!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure you've connected the router via *wired ethernet*!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Running this script will change your *network* settings!\"</span>\n<span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Use Ctrl+C to exit or press enter key to continue...\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Adding xqsystem controller...\"</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token string\">\"/usr/lib/lua/luci/controller/admin/xqsystem.lua\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\nmodule(\"luci.controller.admin.xqsystem\", package.seeall)\n\nfunction index()\n    local page   = node(\"api\")\n    page.target  = firstchild()\n    page.title   = (\"\")\n    page.order   = 100\n    page.index = true\n    page   = node(\"api\",\"xqsystem\")\n    page.target  = firstchild()\n    page.title   = (\"\")\n    page.order   = 100\n    page.index = true\n    entry(&#123;\"api\", \"xqsystem\", \"token\"&#125;, call(\"getToken\"), (\"\"), 103, 0x08)\nend\n\nlocal LuciHttp = require(\"luci.http\")\n\nfunction getToken()\n    local result = &#123;&#125;\n    result[\"code\"] = 0\n    result[\"token\"] = \"; nvram set ssh_en=1; nvram set uart_en=1; nvram set boot_wait=on; nvram commit; uci set wireless.@wifi-iface[0].key=\\<span class=\"token variable\"><span class=\"token variable\">`</span>mkxqimage -I<span class=\"token punctuation\">\\</span><span class=\"token variable\">`</span></span>; uci commit; sed -i 's/channel=.*/channel=<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>debug<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>/g' /etc/init.d/dropbear; /etc/init.d/dropbear start;\"\n    LuciHttp.write_json(result)\nend\nEOF</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Changing network settings...\"</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-x</span>\n<span class=\"token comment\"># /etc/config/dhcp</span>\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">dhcp.lan.ra_management</span><span class=\"token operator\">=</span><span class=\"token string\">'1'</span>\nuci del dhcp.lan.start\nuci del dhcp.lan.limit\nuci del dhcp.lan.leasetime\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">dhcp.lan.ignore</span><span class=\"token operator\">=</span><span class=\"token string\">'1'</span>\n<span class=\"token comment\"># /etc/config/network</span>\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">network.lan.ipaddr</span><span class=\"token operator\">=</span><span class=\"token string\">'169.254.31.1'</span>\nuci <span class=\"token parameter variable\">-q</span> commit\n<span class=\"token builtin class-name\">set</span> +x\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;success_font&#125;</span> All settings are applied.<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Please now disconnect from this router, and connect to your Xiaomi/Redmi router.\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> For Xiaomi AX3000/AX6000/AX9000:\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"       Open your browser, access the following URL:\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"         http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK>/api/xqsystem/extendwifi_connect_inited_router?ssid=MEDIATEK-ARM-IS-GREAT&amp;password=ARE-YOU-OK&amp;admin_username=root&amp;admin_password=admin&amp;admin_nonce=xxx\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Restarting network...\"</span>\nwifi reload <span class=\"token operator\">></span><span class=\"token string\">\"/dev/null\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n/etc/init.d/network restart <span class=\"token operator\">></span><span class=\"token string\">\"/dev/null\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>打开windows移动热点，这时候电脑就会多出来一个网卡（这个热点的）</p>\n</li>\n<li>\n<p>把刚刚刷好的openwrt桥接到windows热点上。ps:热点必须联网</p>\n</li>\n<li>\n<p>登录AX6，复制当前AX6后台链接中 “stock=” 后面的字符串；</p>\n</li>\n<li>\n<p>替换链接中相应的数据后，复制到浏览器点击回车，解锁SSH；<br />\n<a href=\"http://192.168.31.1/cgi-bin/luci/;stok=\">http://192.168.31.1/cgi-bin/luci/;stok=</a><stock>/api/xqsystem/extendwifi_connect_inited_router?ssid=op&amp;password=12345678&amp;admin_username=root&amp;admin_password=password&amp;admin_nonce=xxx</p>\n</li>\n<li>\n<p>提示解锁成功之后，再次登录ax6后台，5G频段路由密码，就是SSH密码了</p>\n</li>\n</ol>\n<p>到这里SSH就解锁了。</p>\n<h2 id=\"刷入openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷入openwrt\"></a> 刷入openwrt</h2>\n<p>红米ax6有两个系统分区，你在0区，就把openwrt刷到0区，反之刷到1区。</p>\n<p>就是说，你在0分区刷，固件会上传到1分区。你在1分区刷，固件会上传到0分区。所以刷之前要切换分区先。</p>\n<p>我这里没扩容，因为第一次刷的那个路由器变砖了，我在网上没找到很完善的扩容方案。不扩容只能刷30m以下的哈，超过会变砖，用小米官方的刷机软件可求回来。但是扩容刷机失败，不能用小米官网的刷机求了。。。</p>\n<p>这样就不会出现变砖的情况了。</p>\n<p>下面以1分区举例</p>\n<ol>\n<li>\n<p>检测当前分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram get flag_last_success<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>把openwrt的固件上传到/tmp下面，第一次上传.ubi后缀的文件的哈<img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430212942511.png\" alt=\"image-20220430212942511\" /></p>\n</li>\n<li>\n<p>刷入固件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ubiformat /dev/mtd13 <span class=\"token parameter variable\">-y</span> <span class=\"token parameter variable\">-f</span> /tmp/你上传的固件文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>结束。</p>\n<p>剩下的就是切换不同系统的代码了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">OP切换到小米系统\nfw_setenv  flag_last_success <span class=\"token number\">0</span>\nfw_setenv flag_boot_rootfs <span class=\"token number\">0</span>\n<span class=\"token function\">reboot</span>\n\n小米系统切换到OP\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430213828289.png\" alt=\"image-20220430213828289\" /></p>\n<p>我想解锁完ssh之后就已经实现完全自由啦。还有什么是比一个linux更自由的呢~</p>\n<h1 id=\"接入校园网\"><a class=\"markdownIt-Anchor\" href=\"#接入校园网\"></a> 接入校园网</h1>\n<p>河南师范大学的校园网，狗的一，一个账号一个设备。这能行吗？？？咱就是说，一百个不同意。</p>\n<p>ax6有两个频段，5G和2.4G，学校的也是分这俩个频段。</p>\n<p>这里要科普一下这个5G和2.4G频段哈。这里是频率，不是我们手机上说的那个5G时代哈。</p>\n<ul>\n<li>\n<p>5G频段在信号强距离时，抗干扰能力远大于2.4G，其下载速度和上传速度明显哈。</p>\n</li>\n<li>\n<p>2.4G频段信号范围比较广哈，穿墙效果更好。</p>\n</li>\n</ul>\n<p>其实从物理也可得出来啦，5G频段，频率大了，波长短了，衍射效果不好，粒子性更强。波长大的，会更易绕过墙壁等障碍物。</p>\n<p>我所在的寝室校园网5G很好。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222656166.png\" alt=\"image-20220430222656166\" /></p>\n<p>我的方案是，用路由器的5G信道，连接到校园网5G网上，在ssh连接路由器，curl命令，发送一个post请求，完成web认证。之后用路由器的2.4G频段就可以上网了。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222926530.png\" alt=\"image-20220430222926530\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223040679.png\" alt=\"image-20220430223040679\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223440228.png\" alt=\"image-20220430223440228\" /></p>\n<p>在定时运行这个shell脚本，就可以让路由器一直使用学校的校园网啦。</p>\n<p>速度与直连校园网无差别。十分nice</p>\n<p>唉，先到这吧，学校没有ipv6，难受了，加上我的笔记本没法插网线，没法远程开机，难受~。让我们上了研究生再写这篇文章吧。</p>\n",
            "tags": [
                "log"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "ohayo's blog • All posts by \"log\" tag",
    "description": null,
    "home_page_url": "https://blog.ohayo.live",
    "items": [
        {
            "id": "https://blog.ohayo.live/soft/quantumultx/quantumult-x-note/",
            "url": "https://blog.ohayo.live/soft/quantumultx/quantumult-x-note/",
            "title": "Quantumult X一款神奇的软件",
            "date_published": "2022-05-04T15:40:49.000Z",
            "content_html": "<p>quantumult x，一款路由软件。<br />\n简单的说，这个软件可以实现如下</p>\n<ul>\n<li>VPN代理</li>\n<li>路由分流</li>\n<li>捕获网络请求，也就是在应用层抓包</li>\n<li>重写数据包</li>\n<li>执行JavaScript脚本</li>\n</ul>\n<p>这款软件的性价比太高了，很遗憾的是，作者没有给予相关的文档，所以开始的小白很难折腾。还好作者在GitHub上给了相关的sample。<a href=\"https://github.com/crossutility/Quantumult-X\">quantumult x官方</a></p>\n<h1 id=\"相关资料\"><a class=\"markdownIt-Anchor\" href=\"#相关资料\"></a> 相关资料</h1>\n<p>这里我收集了一些网上的资料。</p>\n<p>大致配置，相关功能的介绍几乎都在这个作者写的====&gt;<a href=\"https://www.notion.so/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917\">Quantumult-X不完全教程</a></p>\n<p>这篇文章大致讲了配置文件的基本格式，以及各个功能。</p>\n<h1 id=\"术语简解\"><a class=\"markdownIt-Anchor\" href=\"#术语简解\"></a> 术语简解</h1>\n<p>简单解释一下，这几个在配置文件中的模块是啥意思。详细的请看上面的教程。</p>\n<p>首先说一下quantumult x支持远程挂载文件，就你可以直接过载github或者服务器上托管的配置或者规则。</p>\n<p>所有在remote标签下的都是远程挂载的配置文件，在local下都是本地的配置文件。</p>\n<ul>\n<li>\n<p>分流（filter），比如你有一个科学上网的节点，国内网站你想直接用本地的网，国外网站用自己的节点。这个需要分流进行实现。分流一共三类。</p>\n<ul>\n<li>direct，走本地的网络，直连</li>\n<li>reject，直接丢掉，不入站。把广告的host走reject，就会把广告屏蔽掉。</li>\n<li>proxy，代理，就是走选择的代理节点。</li>\n</ul>\n</li>\n<li>\n<p>重写（rewrite），这个是quantumult x里的BEST功能之一了，你可以把收到的response进行重写，再返回给你的设备，这样就可以破解一些东西。同时还可以重写request。十分强大。后续再说。</p>\n</li>\n<li>\n<p>server，这个就是节点。节点就在这里添加。</p>\n</li>\n<li>\n<p>general是一般配置，这个在相关资料里说的很清楚了。不懂可以去那里看哈。</p>\n</li>\n<li>\n<p>dns，域名解析，你可以多添加几个dns服务器，quantumult x会测试这些dns服务器，选择最优的。</p>\n</li>\n<li>\n<p>policy，策略组，这是quantumult x进行解耦的神器，不得不说作者有些东西，为了更方便管理分流和节点，quantumult x提出了策略组，策略组可以管理特定的host走哪个分流，或者那个节点。</p>\n</li>\n<li>\n<p>task，quantumult x执行js脚本的配置。</p>\n</li>\n<li>\n<p>http_backend，http捕获配置，没研究过这个，待填坑。</p>\n</li>\n<li>\n<p>mitm，在添加完quantumult x的CA证书后，quantumult x有权力对你的流量进行分析包含https，但是它不会全部进行分析，只对hostname里面的host进行分析。</p>\n</li>\n</ul>\n<h1 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\"></a> 配置</h1>\n<p>我的配置分流参考了这几位作者的。</p>\n<ul>\n<li><a href=\"https://github.com/KOP-XIAO/QuantumultX\">KOP-XIAO</a>的资源解析器</li>\n<li><a href=\"https://github.com/DivineEngine/Profiles\">DivineEngine</a>的分流、重写策略</li>\n<li><a href=\"https://github.com/nondanee/UnblockNeteaseMusic\">网易云解锁</a>，自己的国内服务器搭建的。</li>\n<li>以及自己做的一些分流规则，重写规则</li>\n<li>自己的JavaScript脚本</li>\n</ul>\n<p>规则不难写，很多前人收集好的，fork一份备份，换成自己的，定时更新备份。就行啦。</p>\n<p>了解完大致的规则，慢慢就会做出来适合自己的配置。十分的香。</p>\n<h1 id=\"javascript之疑惑\"><a class=\"markdownIt-Anchor\" href=\"#javascript之疑惑\"></a> JavaScript之疑惑</h1>\n<p><s>quantumult x没有给相关的api文档，这可真是太难受了，家人们，破防了。还好有些人以及写好了一些js示例。加上sample上面有些注释。。。我大致悟到了这么多东西。</s></p>\n<p>JS所有的API，都在自带的配置模板里，如果之前没有用过JavaScript发送网络请求等，还是十分建议参考=&gt;<a href=\"https://zhujiyuan.xyz/2022/05/10/quantumult-x-and-js/\">这篇</a></p>\n<h2 id=\"cookie问题\"><a class=\"markdownIt-Anchor\" href=\"#cookie问题\"></a> cookie问题</h2>\n<p>quantumult x内封装了一个轻量级数据库，存放键值对，就是quantumult x的持久化策略，利用重写，捕获request包的headers，可以放到里面供js脚本使用。</p>\n<h2 id=\"jd签到的脚本怎么写\"><a class=\"markdownIt-Anchor\" href=\"#jd签到的脚本怎么写\"></a> jd签到的脚本怎么写？</h2>\n<p>GitHub开源的京东脚本作者，写了一个env环境的class，这个类可以更方便的发post，get等请求，同时判断是quantumult x还是小火箭等app。</p>\n<h2 id=\"广告过滤\"><a class=\"markdownIt-Anchor\" href=\"#广告过滤\"></a> 广告过滤</h2>\n<p>这个是quantumult x一个很吸引人的地方了，quantumult x可以分流过滤广告，就是自己设置或者抄别人的规则，广告全部走reject。练习可以找QQ空间的广告联系。<br />\n最nb的是js重写过滤，重写可以在request和response两个地方运行js脚本，之前有过python爬虫经验的狂喜！！！知道该怎么做了吧，这个就不说了。</p>\n<h2 id=\"网易云音乐解锁\"><a class=\"markdownIt-Anchor\" href=\"#网易云音乐解锁\"></a> 网易云音乐解锁</h2>\n<p>这个就是在服务器上搭建一个节点，然后在你进网易云听歌的时候，网易云音乐域名走服务器搭建的这个节点，返回给你其他音乐平台的歌曲直链。设置好分流和策略组即可。<br />\n这个节点搭建坑比较多。回头说</p>\n<h2 id=\"调试js问题\"><a class=\"markdownIt-Anchor\" href=\"#调试js问题\"></a> 调试js问题</h2>\n<p>quantumult x的js调试太不方便了，对我来说，我目前手上没得mac。只有iPad和iPhone个一台。<br />\n我的方案是，  <s>windows电脑搭建一个samba服务器，苹果自带的文件可以直接连默认端口的samba服务器，然后让quantumult x直接跑samba里面的js。</s>  windows下挂载iCloud云盘，直接修改quantumult x下的js文件。<br />\n<img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220509213606111.png\" alt=\"image-20220509213606111\" /></p>\n<hr />\n<h1 id=\"change-logs\"><a class=\"markdownIt-Anchor\" href=\"#change-logs\"></a> Change logs</h1>\n<h2 id=\"may-92022\"><a class=\"markdownIt-Anchor\" href=\"#may-92022\"></a> May 9,2022</h2>\n<ul>\n<li>Javascript在另一篇。</li>\n<li>更改js调试方案。</li>\n</ul>\n<h2 id=\"may-252022\"><a class=\"markdownIt-Anchor\" href=\"#may-252022\"></a> May 25,2022</h2>\n<ul>\n<li>更新JavaScript问题</li>\n</ul>\n",
            "tags": [
                "log"
            ]
        },
        {
            "id": "https://blog.ohayo.live/log/redmiAx6/",
            "url": "https://blog.ohayo.live/log/redmiAx6/",
            "title": "折腾红米ax6",
            "date_published": "2022-04-30T12:47:11.000Z",
            "content_html": "<p>此篇记录一下前段时间折腾路由器的经历。哈哈哈哈哈，真是太爽了，路由器这东西，真上头。</p>\n<p>📍</p>\n<h1 id=\"选择路由器\"><a class=\"markdownIt-Anchor\" href=\"#选择路由器\"></a> 选择路由器</h1>\n<p>我选的是红米ax6，这款路由器，可以说是理财产品了，哈哈哈哈，价格一直涨，二手原价卖。就离谱。</p>\n<p>我主要是看重它以下几点</p>\n<ul>\n<li>芯片好，高通的芯片，散热刚刚滴~</li>\n<li>支持wifi6</li>\n<li>穿墙也不错</li>\n</ul>\n<p>加上看好碰见小米商城有货，我直接手起刀落。</p>\n<p>长个样子。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220505005059497.png\" alt=\"image-20220505005059497\" /></p>\n<h1 id=\"刷openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷openwrt\"></a> 刷openwrt</h1>\n<p>openwrt一个开源的路由器系统，可玩性强，深受“大家”喜爱，我也不例外，诶~，年轻就是折腾。</p>\n<p>我用的openwrt是直接在恩山下载一个网友的。不得不说，英雄所见略同。这个网友和我一样，只有一个需求，就是能科学上网就行啦。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430210845243.png\" alt=\"image-20220430210845243\" /></p>\n<p>插件这块大家可以自己装啦。</p>\n<p>米家的固件实在是苦不堪言，红米ax6跑千M网和玩一样，根本没有压力。我选择openwrt更高的自由度。</p>\n<h2 id=\"解锁ssh\"><a class=\"markdownIt-Anchor\" href=\"#解锁ssh\"></a> 解锁SSH</h2>\n<p>ax6最难刷机的原因就是SSH太难解。</p>\n<p>我是参考的b站这位网友给的教程，解锁的。<a href=\"https://www.bilibili.com/video/BV1q94y1f7fj\">视频链接</a></p>\n<p>我不是特别喜欢这个视频的风格，所以这里我简单概括一下他说的这些东西。</p>\n<ol>\n<li>\n<p>将AX6的固件降级为1.0.18版本</p>\n</li>\n<li>\n<p>红米ax6解锁需要一个openwrt路由（能上网的）。</p>\n</li>\n<li>\n<p>用虚拟机搭建一个openwrt系统的虚拟路由，就是开一个虚拟机。配置网络环境虚拟机网络环境</p>\n</li>\n<li>\n<p>上传wireless.sh文件到虚拟机，执行 sh /root/wireless.sh</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#wireless.sh如下</span>\n<span class=\"token comment\">#!/bin/ash</span>\n<span class=\"token comment\"># SPDX-License-Identifier: GPL-3.0-only</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Copyright (C) 2020 yyjdelete</span>\n<span class=\"token comment\"># Copyright (C) 2021 Robert Marko &lt;robimarko@gmail.com></span>\n<span class=\"token comment\"># Copyright (C) 2021 Tianling Shen &lt;cnsztl@immortalwrt.org></span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Original threads:</span>\n<span class=\"token comment\"># Redmi AX6 AX3000: https://www.right.com.cn/forum/thread-4060726-1-1.html</span>\n<span class=\"token comment\"># Xiaomi AX6000/AX9000: https://forum.openwrt.org/t/openwrt-support-for-xiaomi-ax9000/98908/34</span>\n\n<span class=\"token assign-left variable\">info_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[36m[Info]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token assign-left variable\">success_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m[Success]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token assign-left variable\">warning_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[33m[Warning]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure your router has wireless support!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure your router is restored to factory settings (not configured)!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure you've backed up the network and wireless settings!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure you've connected the router via *wired ethernet*!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Running this script will change your *network* settings!\"</span>\n<span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Use Ctrl+C to exit or press enter key to continue...\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Adding xqsystem controller...\"</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token string\">\"/usr/lib/lua/luci/controller/admin/xqsystem.lua\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\nmodule(\"luci.controller.admin.xqsystem\", package.seeall)\n\nfunction index()\n    local page   = node(\"api\")\n    page.target  = firstchild()\n    page.title   = (\"\")\n    page.order   = 100\n    page.index = true\n    page   = node(\"api\",\"xqsystem\")\n    page.target  = firstchild()\n    page.title   = (\"\")\n    page.order   = 100\n    page.index = true\n    entry(&#123;\"api\", \"xqsystem\", \"token\"&#125;, call(\"getToken\"), (\"\"), 103, 0x08)\nend\n\nlocal LuciHttp = require(\"luci.http\")\n\nfunction getToken()\n    local result = &#123;&#125;\n    result[\"code\"] = 0\n    result[\"token\"] = \"; nvram set ssh_en=1; nvram set uart_en=1; nvram set boot_wait=on; nvram commit; uci set wireless.@wifi-iface[0].key=\\<span class=\"token variable\"><span class=\"token variable\">`</span>mkxqimage -I<span class=\"token punctuation\">\\</span><span class=\"token variable\">`</span></span>; uci commit; sed -i 's/channel=.*/channel=<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>debug<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>/g' /etc/init.d/dropbear; /etc/init.d/dropbear start;\"\n    LuciHttp.write_json(result)\nend\nEOF</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Changing network settings...\"</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-x</span>\n<span class=\"token comment\"># /etc/config/dhcp</span>\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">dhcp.lan.ra_management</span><span class=\"token operator\">=</span><span class=\"token string\">'1'</span>\nuci del dhcp.lan.start\nuci del dhcp.lan.limit\nuci del dhcp.lan.leasetime\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">dhcp.lan.ignore</span><span class=\"token operator\">=</span><span class=\"token string\">'1'</span>\n<span class=\"token comment\"># /etc/config/network</span>\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">network.lan.ipaddr</span><span class=\"token operator\">=</span><span class=\"token string\">'169.254.31.1'</span>\nuci <span class=\"token parameter variable\">-q</span> commit\n<span class=\"token builtin class-name\">set</span> +x\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;success_font&#125;</span> All settings are applied.<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Please now disconnect from this router, and connect to your Xiaomi/Redmi router.\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> For Xiaomi AX3000/AX6000/AX9000:\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"       Open your browser, access the following URL:\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"         http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK>/api/xqsystem/extendwifi_connect_inited_router?ssid=MEDIATEK-ARM-IS-GREAT&amp;password=ARE-YOU-OK&amp;admin_username=root&amp;admin_password=admin&amp;admin_nonce=xxx\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Restarting network...\"</span>\nwifi reload <span class=\"token operator\">></span><span class=\"token string\">\"/dev/null\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n/etc/init.d/network restart <span class=\"token operator\">></span><span class=\"token string\">\"/dev/null\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>打开windows移动热点，这时候电脑就会多出来一个网卡（这个热点的）</p>\n</li>\n<li>\n<p>把刚刚刷好的openwrt桥接到windows热点上。ps:热点必须联网</p>\n</li>\n<li>\n<p>登录AX6，复制当前AX6后台链接中 “stock=” 后面的字符串；</p>\n</li>\n<li>\n<p>替换链接中相应的数据后，复制到浏览器点击回车，解锁SSH；<br />\n<a href=\"http://192.168.31.1/cgi-bin/luci/;stok=\">http://192.168.31.1/cgi-bin/luci/;stok=</a><stock>/api/xqsystem/extendwifi_connect_inited_router?ssid=op&amp;password=12345678&amp;admin_username=root&amp;admin_password=password&amp;admin_nonce=xxx</p>\n</li>\n<li>\n<p>提示解锁成功之后，再次登录ax6后台，5G频段路由密码，就是SSH密码了</p>\n</li>\n</ol>\n<p>到这里SSH就解锁了。</p>\n<h2 id=\"刷入openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷入openwrt\"></a> 刷入openwrt</h2>\n<p>红米ax6有两个系统分区，你在0区，就把openwrt刷到0区，反之刷到1区。</p>\n<p>就是说，你在0分区刷，固件会上传到1分区。你在1分区刷，固件会上传到0分区。所以刷之前要切换分区先。</p>\n<p>我这里没扩容，因为第一次刷的那个路由器变砖了，我在网上没找到很完善的扩容方案。不扩容只能刷30m以下的哈，超过会变砖，用小米官方的刷机软件可求回来。但是扩容刷机失败，不能用小米官网的刷机求了。。。</p>\n<p>这样就不会出现变砖的情况了。</p>\n<p>下面以1分区举例</p>\n<ol>\n<li>\n<p>检测当前分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram get flag_last_success<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>把openwrt的固件上传到/tmp下面，第一次上传.ubi后缀的文件的哈<img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430212942511.png\" alt=\"image-20220430212942511\" /></p>\n</li>\n<li>\n<p>刷入固件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ubiformat /dev/mtd13 <span class=\"token parameter variable\">-y</span> <span class=\"token parameter variable\">-f</span> /tmp/你上传的固件文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>结束。</p>\n<p>剩下的就是切换不同系统的代码了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">OP切换到小米系统\nfw_setenv  flag_last_success <span class=\"token number\">0</span>\nfw_setenv flag_boot_rootfs <span class=\"token number\">0</span>\n<span class=\"token function\">reboot</span>\n\n小米系统切换到OP\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430213828289.png\" alt=\"image-20220430213828289\" /></p>\n<p>我想解锁完ssh之后就已经实现完全自由啦。还有什么是比一个linux更自由的呢~</p>\n<h1 id=\"接入校园网\"><a class=\"markdownIt-Anchor\" href=\"#接入校园网\"></a> 接入校园网</h1>\n<p>河南师范大学的校园网，狗的一，一个账号一个设备。这能行吗？？？咱就是说，一百个不同意。</p>\n<p>ax6有两个频段，5G和2.4G，学校的也是分这俩个频段。</p>\n<p>这里要科普一下这个5G和2.4G频段哈。这里是频率，不是我们手机上说的那个5G时代哈。</p>\n<ul>\n<li>\n<p>5G频段在信号强距离时，抗干扰能力远大于2.4G，其下载速度和上传速度明显哈。</p>\n</li>\n<li>\n<p>2.4G频段信号范围比较广哈，穿墙效果更好。</p>\n</li>\n</ul>\n<p>其实从物理也可得出来啦，5G频段，频率大了，波长短了，衍射效果不好，粒子性更强。波长大的，会更易绕过墙壁等障碍物。</p>\n<p>我所在的寝室校园网5G很好。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222656166.png\" alt=\"image-20220430222656166\" /></p>\n<p>我的方案是，用路由器的5G信道，连接到校园网5G网上，在ssh连接路由器，curl命令，发送一个post请求，完成web认证。之后用路由器的2.4G频段就可以上网了。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222926530.png\" alt=\"image-20220430222926530\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223040679.png\" alt=\"image-20220430223040679\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223440228.png\" alt=\"image-20220430223440228\" /></p>\n<p>在定时运行这个shell脚本，就可以让路由器一直使用学校的校园网啦。</p>\n<p>速度与直连校园网无差别。十分nice</p>\n<p>唉，先到这吧，学校没有ipv6，难受了，加上我的笔记本没法插网线，没法远程开机，难受~。让我们上了研究生再写这篇文章吧。</p>\n",
            "tags": [
                "log"
            ]
        }
    ]
}
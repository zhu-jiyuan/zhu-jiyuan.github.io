{
    "version": "https://jsonfeed.org/version/1",
    "title": "ohayo's blog • All posts by \"log\" category",
    "description": null,
    "home_page_url": "https://blog.csiki.org",
    "items": [
        {
            "id": "https://blog.csiki.org/tl6088/",
            "url": "https://blog.csiki.org/tl6088/",
            "title": "tl6088刷机之旅",
            "date_published": "2023-08-27T15:16:59.000Z",
            "content_html": "<p>最近又换了一台路由器，TP-link-6088，因为上个月买了台switch，无论怎么换DNS，下载速度依旧感人至深。转手就把小米AX6000卖了，其实小米AX6000已经能满足我的日常的绝大需求，唯一缺点就是自由度不够，迟来的switch打破昔日的平静。</p>\n<h2 id=\"为啥选择tl6088\"><a class=\"markdownIt-Anchor\" href=\"#为啥选择tl6088\"></a> 为啥选择tl6088？</h2>\n<p>对，这是个好问题，身为一个小垃圾佬，先后了解很多路由器，结合我的需求，要能刷openwrt，运行内存至少要512，CPU要好一些，处理网络数据包的同时，要留有余地去跑一些第三方服务。闪存要高一些，至少64。<br />\n最重要的是价格一定要便宜！！！<br />\n如此这般，候选路由器1号----红米ax6000，2号----tl6088，3号----tl6080。<br />\n红米ax6000在配置上几乎与6088完全一样，加上是米家的路由器，再熟悉不过，可惜没有2.5G网口，惨遭淘汰。<br />\n6088和6080，jd搞活动，价格相差不大，最终选择了6088，6百多拿下。</p>\n<h2 id=\"刷机openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷机openwrt\"></a> 刷机openwrt</h2>\n<p>tp家的路由器和米家的不一样，我看很多论坛上说tp的刷机过程比较繁琐。之前玩的红米ax6，刷机已经很繁琐了。我敲，这不会又是一个通宵吧。</p>\n<p>还好小马过河，实际比红米ax6省事不少，利用6088的vpn漏洞，注入刷机包，再通过tftp服务，把recover传入，整体过程一气呵成，大概20分钟，就刷完了。</p>\n<p><img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230827235738.png\" alt=\"image.png\" /></p>\n<p>具体的参考文章可以看===&gt;<a href=\"https://blog.lishun.me/tl-xdr608x-openwrt-install\">这篇文章</a>，作者很谨慎，传输的文件都加了md5验证文件唯一性，胆大心细，十分nice。</p>\n<h2 id=\"配置openwrt\"><a class=\"markdownIt-Anchor\" href=\"#配置openwrt\"></a> 配置openwrt</h2>\n<p>家里的电线光猫，全国通用密码，直接8080端口找到老web地址，把宽带账号&amp;&amp;密码记下来，删除第三个路由模式，创建一个桥接模式，钩上端口，最后关闭光猫的DHCP。</p>\n<p>openwrt这边就容易多了，我用的是wan6接口拨号上网，其他默认就行。最后设置完Wi-Fi密码，把国家代码改成AU，澳大利亚提高无线功率。</p>\n<h3 id=\"插件\"><a class=\"markdownIt-Anchor\" href=\"#插件\"></a> 插件</h3>\n<p>openwrt最好玩儿的地方。</p>\n<p>我目前安装的插件</p>\n<ul>\n<li>open clash</li>\n<li>smartdns</li>\n<li>upnp</li>\n<li>uu加速器</li>\n</ul>\n<p>smartdns具有很好的dns查询效果，自己设置完上游dns后，网页打开能快不少，不是吹的。</p>\n<p>smartdns作为openclash的上游dns，有很好的加速效果，upnp就不用多说了，必装插件，打游戏嗖嗖滴。</p>\n<p>uu加速器，害，一个臭打游戏的插件，加速主机，要什么小黑盒，都没用。</p>\n<hr />\n<p>简单记录一下新路由器的之旅，openwrt还有很多地方不懂，这周会开始逐步搞懂，最后记录一个通用的图文配置，以备不时之需。</p>\n<p>唉，这周之前不到2刀买的域名过期了，导致我一堆的服务都歇菜了，azure for student 订阅也没多少了，希望黑5能找到好机子，下周会先配置完nvim，然后研究一下ws协议等，没有这些东西，程序员简直没法生活啊。抽空会更新c语言&amp;&amp;汇编。</p>\n",
            "tags": [
                "openwrt"
            ]
        },
        {
            "id": "https://blog.csiki.org/log/hexo-log/",
            "url": "https://blog.csiki.org/log/hexo-log/",
            "title": "hexo博客更新",
            "date_published": "2022-12-05T08:15:00.000Z",
            "content_html": "<h2 id=\"更新动机\"><a class=\"markdownIt-Anchor\" href=\"#更新动机\"></a> 更新动机</h2>\n<p>一直没找到写作、UI都让我感觉很舒服的主题。</p>\n<p>之前的主题很好看，有很多插件，更多的是用来写「笔记」或者「练习题」，因为写作很不方便，而且时不时渲染会出错，每次都要写好久，就有了这次的换主题。</p>\n<h2 id=\"以后安排\"><a class=\"markdownIt-Anchor\" href=\"#以后安排\"></a> 以后安排</h2>\n<p>之前的hexo主题，会写以后的错题、考试等等。<br />\n这个主题会记录数学、分享等等，同时会接着改造。</p>\n",
            "tags": [
                "log"
            ]
        },
        {
            "id": "https://blog.csiki.org/log/redmiAx6/",
            "url": "https://blog.csiki.org/log/redmiAx6/",
            "title": "折腾红米ax6",
            "date_published": "2022-04-30T12:47:11.000Z",
            "content_html": "<p>此篇记录一下前段时间折腾路由器的经历。哈哈哈哈哈，真是太爽了，路由器这东西，真上头。</p>\n<p>📍</p>\n<h1 id=\"选择路由器\"><a class=\"markdownIt-Anchor\" href=\"#选择路由器\"></a> 选择路由器</h1>\n<p>我选的是红米ax6，这款路由器，可以说是理财产品了，哈哈哈哈，价格一直涨，二手原价卖。就离谱。</p>\n<p>我主要是看重它以下几点</p>\n<ul>\n<li>芯片好，高通的芯片，散热刚刚滴~</li>\n<li>支持wifi6</li>\n<li>穿墙也不错</li>\n</ul>\n<p>加上看好碰见小米商城有货，我直接手起刀落。</p>\n<p>长个样子。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220505005059497.png\" alt=\"image-20220505005059497\" /></p>\n<h1 id=\"刷openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷openwrt\"></a> 刷openwrt</h1>\n<p>openwrt一个开源的路由器系统，可玩性强，深受“大家”喜爱，我也不例外，诶~，年轻就是折腾。</p>\n<p>我用的openwrt是直接在恩山下载一个网友的。不得不说，英雄所见略同。这个网友和我一样，只有一个需求，就是能科学上网就行啦。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430210845243.png\" alt=\"image-20220430210845243\" /></p>\n<p>插件这块大家可以自己装啦。</p>\n<p>米家的固件实在是苦不堪言，红米ax6跑千M网和玩一样，根本没有压力。我选择openwrt更高的自由度。</p>\n<h2 id=\"解锁ssh\"><a class=\"markdownIt-Anchor\" href=\"#解锁ssh\"></a> 解锁SSH</h2>\n<p>ax6最难刷机的原因就是SSH太难解。</p>\n<p>我是参考的b站这位网友给的教程，解锁的。<a href=\"https://www.bilibili.com/video/BV1q94y1f7fj\">视频链接</a></p>\n<p>我不是特别喜欢这个视频的风格，所以这里我简单概括一下他说的这些东西。</p>\n<ol>\n<li>\n<p>将AX6的固件降级为1.0.18版本</p>\n</li>\n<li>\n<p>红米ax6解锁需要一个openwrt路由（能上网的）。</p>\n</li>\n<li>\n<p>用虚拟机搭建一个openwrt系统的虚拟路由，就是开一个虚拟机。配置网络环境虚拟机网络环境</p>\n</li>\n<li>\n<p>上传wireless.sh文件到虚拟机，执行 sh /root/wireless.sh</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#wireless.sh如下</span>\n<span class=\"token comment\">#!/bin/ash</span>\n<span class=\"token comment\"># SPDX-License-Identifier: GPL-3.0-only</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Copyright (C) 2020 yyjdelete</span>\n<span class=\"token comment\"># Copyright (C) 2021 Robert Marko &lt;robimarko@gmail.com></span>\n<span class=\"token comment\"># Copyright (C) 2021 Tianling Shen &lt;cnsztl@immortalwrt.org></span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Original threads:</span>\n<span class=\"token comment\"># Redmi AX6 AX3000: https://www.right.com.cn/forum/thread-4060726-1-1.html</span>\n<span class=\"token comment\"># Xiaomi AX6000/AX9000: https://forum.openwrt.org/t/openwrt-support-for-xiaomi-ax9000/98908/34</span>\n\n<span class=\"token assign-left variable\">info_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[36m[Info]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token assign-left variable\">success_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m[Success]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token assign-left variable\">warning_font</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[33m[Warning]<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure your router has wireless support!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure your router is restored to factory settings (not configured)!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure you've backed up the network and wireless settings!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Please make sure you've connected the router via *wired ethernet*!\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Running this script will change your *network* settings!\"</span>\n<span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"Use Ctrl+C to exit or press enter key to continue...\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Adding xqsystem controller...\"</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token string\">\"/usr/lib/lua/luci/controller/admin/xqsystem.lua\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\nmodule(\"luci.controller.admin.xqsystem\", package.seeall)\n\nfunction index()\n    local page   = node(\"api\")\n    page.target  = firstchild()\n    page.title   = (\"\")\n    page.order   = 100\n    page.index = true\n    page   = node(\"api\",\"xqsystem\")\n    page.target  = firstchild()\n    page.title   = (\"\")\n    page.order   = 100\n    page.index = true\n    entry(&#123;\"api\", \"xqsystem\", \"token\"&#125;, call(\"getToken\"), (\"\"), 103, 0x08)\nend\n\nlocal LuciHttp = require(\"luci.http\")\n\nfunction getToken()\n    local result = &#123;&#125;\n    result[\"code\"] = 0\n    result[\"token\"] = \"; nvram set ssh_en=1; nvram set uart_en=1; nvram set boot_wait=on; nvram commit; uci set wireless.@wifi-iface[0].key=\\<span class=\"token variable\"><span class=\"token variable\">`</span>mkxqimage -I<span class=\"token punctuation\">\\</span><span class=\"token variable\">`</span></span>; uci commit; sed -i 's/channel=.*/channel=<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>debug<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>/g' /etc/init.d/dropbear; /etc/init.d/dropbear start;\"\n    LuciHttp.write_json(result)\nend\nEOF</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Changing network settings...\"</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-x</span>\n<span class=\"token comment\"># /etc/config/dhcp</span>\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">dhcp.lan.ra_management</span><span class=\"token operator\">=</span><span class=\"token string\">'1'</span>\nuci del dhcp.lan.start\nuci del dhcp.lan.limit\nuci del dhcp.lan.leasetime\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">dhcp.lan.ignore</span><span class=\"token operator\">=</span><span class=\"token string\">'1'</span>\n<span class=\"token comment\"># /etc/config/network</span>\nuci <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">network.lan.ipaddr</span><span class=\"token operator\">=</span><span class=\"token string\">'169.254.31.1'</span>\nuci <span class=\"token parameter variable\">-q</span> commit\n<span class=\"token builtin class-name\">set</span> +x\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;success_font&#125;</span> All settings are applied.<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> Please now disconnect from this router, and connect to your Xiaomi/Redmi router.\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;info_font&#125;</span> For Xiaomi AX3000/AX6000/AX9000:\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"       Open your browser, access the following URL:\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"         http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK>/api/xqsystem/extendwifi_connect_inited_router?ssid=MEDIATEK-ARM-IS-GREAT&amp;password=ARE-YOU-OK&amp;admin_username=root&amp;admin_password=admin&amp;admin_nonce=xxx\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;warning_font&#125;</span> Restarting network...\"</span>\nwifi reload <span class=\"token operator\">></span><span class=\"token string\">\"/dev/null\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n/etc/init.d/network restart <span class=\"token operator\">></span><span class=\"token string\">\"/dev/null\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>打开windows移动热点，这时候电脑就会多出来一个网卡（这个热点的）</p>\n</li>\n<li>\n<p>把刚刚刷好的openwrt桥接到windows热点上。ps:热点必须联网</p>\n</li>\n<li>\n<p>登录AX6，复制当前AX6后台链接中 “stock=” 后面的字符串；</p>\n</li>\n<li>\n<p>替换链接中相应的数据后，复制到浏览器点击回车，解锁SSH；<br />\n<a href=\"http://192.168.31.1/cgi-bin/luci/;stok=\">http://192.168.31.1/cgi-bin/luci/;stok=</a><stock>/api/xqsystem/extendwifi_connect_inited_router?ssid=op&amp;password=12345678&amp;admin_username=root&amp;admin_password=password&amp;admin_nonce=xxx</p>\n</li>\n<li>\n<p>提示解锁成功之后，再次登录ax6后台，5G频段路由密码，就是SSH密码了</p>\n</li>\n</ol>\n<p>到这里SSH就解锁了。</p>\n<h2 id=\"刷入openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷入openwrt\"></a> 刷入openwrt</h2>\n<p>红米ax6有两个系统分区，你在0区，就把openwrt刷到0区，反之刷到1区。</p>\n<p>就是说，你在0分区刷，固件会上传到1分区。你在1分区刷，固件会上传到0分区。所以刷之前要切换分区先。</p>\n<p>我这里没扩容，因为第一次刷的那个路由器变砖了，我在网上没找到很完善的扩容方案。不扩容只能刷30m以下的哈，超过会变砖，用小米官方的刷机软件可求回来。但是扩容刷机失败，不能用小米官网的刷机求了。。。</p>\n<p>这样就不会出现变砖的情况了。</p>\n<p>下面以1分区举例</p>\n<ol>\n<li>\n<p>检测当前分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram get flag_last_success<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>把openwrt的固件上传到/tmp下面，第一次上传.ubi后缀的文件的哈<img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430212942511.png\" alt=\"image-20220430212942511\" /></p>\n</li>\n<li>\n<p>刷入固件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ubiformat /dev/mtd13 <span class=\"token parameter variable\">-y</span> <span class=\"token parameter variable\">-f</span> /tmp/你上传的固件文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>结束。</p>\n<p>剩下的就是切换不同系统的代码了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">OP切换到小米系统\nfw_setenv  flag_last_success <span class=\"token number\">0</span>\nfw_setenv flag_boot_rootfs <span class=\"token number\">0</span>\n<span class=\"token function\">reboot</span>\n\n小米系统切换到OP\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_last_success</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">flag_boot_rootfs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnvram commit\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430213828289.png\" alt=\"image-20220430213828289\" /></p>\n<p>我想解锁完ssh之后就已经实现完全自由啦。还有什么是比一个linux更自由的呢~</p>\n<h1 id=\"接入校园网\"><a class=\"markdownIt-Anchor\" href=\"#接入校园网\"></a> 接入校园网</h1>\n<p>河南师范大学的校园网，狗的一，一个账号一个设备。这能行吗？？？咱就是说，一百个不同意。</p>\n<p>ax6有两个频段，5G和2.4G，学校的也是分这俩个频段。</p>\n<p>这里要科普一下这个5G和2.4G频段哈。这里是频率，不是我们手机上说的那个5G时代哈。</p>\n<ul>\n<li>\n<p>5G频段在信号强距离时，抗干扰能力远大于2.4G，其下载速度和上传速度明显哈。</p>\n</li>\n<li>\n<p>2.4G频段信号范围比较广哈，穿墙效果更好。</p>\n</li>\n</ul>\n<p>其实从物理也可得出来啦，5G频段，频率大了，波长短了，衍射效果不好，粒子性更强。波长大的，会更易绕过墙壁等障碍物。</p>\n<p>我所在的寝室校园网5G很好。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222656166.png\" alt=\"image-20220430222656166\" /></p>\n<p>我的方案是，用路由器的5G信道，连接到校园网5G网上，在ssh连接路由器，curl命令，发送一个post请求，完成web认证。之后用路由器的2.4G频段就可以上网了。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222926530.png\" alt=\"image-20220430222926530\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223040679.png\" alt=\"image-20220430223040679\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223440228.png\" alt=\"image-20220430223440228\" /></p>\n<p>在定时运行这个shell脚本，就可以让路由器一直使用学校的校园网啦。</p>\n<p>速度与直连校园网无差别。十分nice</p>\n<p>唉，先到这吧，学校没有ipv6，难受了，加上我的笔记本没法插网线，没法远程开机，难受~。让我们上了研究生再写这篇文章吧。</p>\n",
            "tags": [
                "log"
            ]
        }
    ]
}
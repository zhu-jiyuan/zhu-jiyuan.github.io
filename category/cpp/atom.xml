<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.ohayo.live</id>
    <title>ohayo&#39;s blog • Posts by &#34;cpp&#34; category</title>
    <link href="https://blog.ohayo.live" />
    <updated>2022-04-19T13:02:40.000Z</updated>
    <category term="math" />
    <category term="journal" />
    <category term="note" />
    <category term="tex" />
    <category term="单调栈" />
    <category term="log" />
    <category term="cpp" />
    <category term="Linux" />
    <category term="python" />
    <category term="JavaScript" />
    <entry>
        <id>https://blog.ohayo.live/CS/cpp/c-five-zone/</id>
        <title>c++的四大区</title>
        <link rel="alternate" href="https://blog.ohayo.live/CS/cpp/c-five-zone/"/>
        <content type="html">&lt;p&gt;今天开始学习使用c++，之前一直使用python比较多。语言各有千秋，只有最合适。好啦，现在到了使用c++的时候惹。希望我能够喜欢上这个语言。&lt;/p&gt;
&lt;p&gt;let’s go!😽&lt;/p&gt;
&lt;h2 id=&#34;内存四大区&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存四大区&#34;&gt;&lt;/a&gt; 内存四大区&lt;/h2&gt;
&lt;p&gt;编程语言的内存管理，都是类似的，以c++为例，分为以下四大区&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码区&lt;/li&gt;
&lt;li&gt;全局区&lt;/li&gt;
&lt;li&gt;栈区&lt;/li&gt;
&lt;li&gt;堆区&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个区域都有不同的生命周期，咳咳咳，想要更好的编程，当然要好好学习内存管理。&lt;/p&gt;
&lt;p&gt;这块内容像学习心法一样，之修外，而不修内功，会走火入魔，同时不能更好、更快的学习新的东西，对编程语言也了解不够深入。&lt;/p&gt;
&lt;h3 id=&#34;代码区&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码区&#34;&gt;&lt;/a&gt; 代码区&lt;/h3&gt;
&lt;p&gt;代码区，顾名思义，这是存放代码的地方，但是cpu只认识指令。&lt;/p&gt;
&lt;p&gt;编译器在编译代码后，会把代码翻译成二进制指令集合，代码区就是存放这些指令集合的。&lt;/p&gt;
&lt;p&gt;所以代码区是不能更改的，代码区公用一份内存空间，为了节省空间啦。比如，代码中很多地方都有用到一个函数，但是这个函数在代码区只有一份。c++很抠门的。&lt;/p&gt;
&lt;p&gt;代码区，在程序运行的时候，会优先加载到内存中哟。&lt;/p&gt;
&lt;h3 id=&#34;全局区&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#全局区&#34;&gt;&lt;/a&gt; 全局区&lt;/h3&gt;
&lt;p&gt;c++的全局区，不同于一些编程语言，全局区包含常量，静态变量，全局变量等等。十分强大。&lt;/p&gt;
&lt;p&gt;全局区的这些东西，同样在编译阶段都会加载完成。&lt;/p&gt;
&lt;p&gt;程序运行时，与代码区一同先加载到内存之中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常量，包含字符串常量，数字常量等等&lt;/li&gt;
&lt;li&gt;静态变量，在编译时就会运行加载，并且只运行一次，存在全局区。&lt;/li&gt;
&lt;li&gt;全局变量，有程序员自己定义的变量，作用在全局区，所有的东西都能访问到它。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;栈区&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#栈区&#34;&gt;&lt;/a&gt; 栈区&lt;/h3&gt;
&lt;p&gt;栈区，是编译器的管理的内存，所有的临时变量都会储存在这里，交给编译器管理，十分方便，缺点栈的深度有限，有时候，我们需要使用大量递归，会栈溢出。&lt;/p&gt;
&lt;h3 id=&#34;堆区&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆区&#34;&gt;&lt;/a&gt; 堆区&lt;/h3&gt;
&lt;p&gt;堆区又程序员手动管理，例如c语言的malloc或者是c++的new，都是在堆区申请的内存，需要手动管理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点，操作更加灵活方便。给予程序员很高的权限。&lt;/li&gt;
&lt;li&gt;缺点，增加了程序员的心智负担，内存往往没有得到很好的控制。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="note" />
        <category term="cpp" />
        <updated>2022-04-19T13:02:40.000Z</updated>
    </entry>
</feed>

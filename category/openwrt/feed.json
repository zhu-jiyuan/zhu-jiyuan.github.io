{
    "version": "https://jsonfeed.org/version/1",
    "title": "ohayo's blog • All posts by \"openwrt\" category",
    "description": null,
    "home_page_url": "https://blog.csiki.org",
    "items": [
        {
            "id": "https://blog.csiki.org/openwrt-dns/",
            "url": "https://blog.csiki.org/openwrt-dns/",
            "title": "openwrt插件篇-openclash&adguardhome",
            "date_published": "2023-09-03T12:59:49.000Z",
            "content_html": "<p>DNS（<strong>D</strong>omain <strong>N</strong>ame <strong>S</strong>ystem），网络域名系统。可以把它对应手机里的联系人，通过联系人的名字就可以找到电话号码，也能通过手机号找到对应联系人的信息，从而能够准确给特定人拨打电话或者发短信等等。而DNS会把网络域名转换成ip，也能把ip转换成网络域名。</p>\n<p><img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903211232.png\" alt=\"image.png\" /></p>\n<h2 id=\"adguardhome\"><a class=\"markdownIt-Anchor\" href=\"#adguardhome\"></a> AdguardHome</h2>\n<p>AdguardHome 是一个本地DNS转发器，同时能过滤广告或者网站等，<code>GitHub</code>开源。下文简称为ADHome。<br />\n值得庆幸的是，ADHome在openwrt上也能用，首先说一下这个软件能带来哪些好处。</p>\n<p>在上图，浏览一个网站时，会先进行DNS查询，获取网站的IP，这个过程十分慢，会极大影响上网体验，其次在我们连接到Wi-Fi上网时，很可能我们正在使用的设备DNS会被劫持，也就是说不是<code>8.8.8.8|1.1.1.1</code>等公共的DNS服务器，它可能是某个老油条自己搭建的一个，同时把你想访问的网站ip，换成他设定的，这就十分的危险了。</p>\n<p>把DNS默认设置为ADHome的DNS服务端口，你的每一条DNS请求都会走ADHome的DNS服务，就可以防止DNS被劫持，同时为ADHome设置一些公共的DNS服务器上游，在收到DNS请求时，它会并发向这些上游DNS服务器请求，根据你的选择，可以返回最快的，也可以是其他情况。</p>\n<p>如此说来，ADHome兼并smartdns等软件的功能，同时还具备过滤功能，可以设置黑名单来屏蔽广告等。没有理由不装！！！<a href=\"https://github.com/rufengsuixing/luci-app-adguardhome\">openwrt链接</a></p>\n<p><img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903214014.png\" alt=\"image.png\" /></p>\n<p>以下是我的dns备用</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\"># 上游服务器\n114.114.114.114\n223.5.5.5\n180.76.76.76\n1.1.1.1\n8.8.8.8\n8.8.4.4\n117.50.10.10\n180.184.1.1\n101.101.101.101\nhttps://public.dns.iij.jp/dns-query\nhttps://dns.google/dns-query\nhttps://1.1.1.1/dns-query<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>去广告用的是anti-ad公开的广告库—&gt;<a href=\"https://anti-ad.net/easylist.txt\">传送</a><br />\n<img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903214228.png\" alt=\"image.png\" /></p>\n<h2 id=\"openclash\"><a class=\"markdownIt-Anchor\" href=\"#openclash\"></a> openclash</h2>\n<p>openclash是clash的openwrt版本，安装完meta内核，基本和电脑端的规则兼容，一套规则，全平台使用，还是很不错滴。<br />\n就不过多写这个了。</p>\n<h2 id=\"openclashadhome\"><a class=\"markdownIt-Anchor\" href=\"#openclashadhome\"></a> openclash+ADHome</h2>\n<p>这才是硬路由的终极方案，openclash劫持53端口的DNS转发，同时将openclash的DNS上游设置为ADHome。<br />\n如此一来，DNS请求—&gt;53端口DNS—&gt;openclash—&gt;ADHome。</p>\n<p>openclash配置如下，其中8053为ADHome服务端口。<br />\n<img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215059.png\" alt=\"image.png\" /></p>\n<p>ADHome配置如下<br />\n<img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215153.png\" alt=\"image.png\" /></p>\n<h2 id=\"dns测速对比\"><a class=\"markdownIt-Anchor\" href=\"#dns测速对比\"></a> DNS测速对比</h2>\n<p>根据使用情况，smartdns与ADHome dns查询速度基本一致，这里对比的是smartdns与正常情况下的DNS。<br />\n速率对比是玄学，主要用途是为了防止DNS被劫持。</p>\n<p>正常情况如下<br />\n<img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215643.png\" alt=\"image.png\" /></p>\n<p>使用smartdns情况如下<br />\n<img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215805.png\" alt=\"image.png\" /></p>\n<p>尽管dns查询速度这块是玄学，实际使用上来说，提升是有的，搭配openclash秒开YouTube。</p>\n<p>最后不得不说6088这款路由器，真滴强，openclash➕ADHome等应用一点压力都没。<br />\n<img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903220047.png\" alt=\"image.png\" /></p>\n<hr />\n<p>想把博客从hexo转移到hugo，之前改的配置，都不记得改了那里，很难受，算了，先这样吧，等11.11买完新电脑，再迁移吧。</p>\n",
            "tags": [
                "openwrt"
            ]
        },
        {
            "id": "https://blog.csiki.org/tl6088/",
            "url": "https://blog.csiki.org/tl6088/",
            "title": "tl6088刷机之旅",
            "date_published": "2023-08-27T15:16:59.000Z",
            "content_html": "<p>最近又换了一台路由器，TP-link-6088，因为上个月买了台switch，无论怎么换DNS，下载速度依旧感人至深。转手就把小米AX6000卖了，其实小米AX6000已经能满足我的日常的绝大需求，唯一缺点就是自由度不够，迟来的switch打破昔日的平静。</p>\n<h2 id=\"为啥选择tl6088\"><a class=\"markdownIt-Anchor\" href=\"#为啥选择tl6088\"></a> 为啥选择tl6088？</h2>\n<p>对，这是个好问题，身为一个小垃圾佬，先后了解很多路由器，结合我的需求，要能刷openwrt，运行内存至少要512，CPU要好一些，处理网络数据包的同时，要留有余地去跑一些第三方服务。闪存要高一些，至少64。<br />\n最重要的是价格一定要便宜！！！<br />\n如此这般，候选路由器1号----红米ax6000，2号----tl6088，3号----tl6080。<br />\n红米ax6000在配置上几乎与6088完全一样，加上是米家的路由器，再熟悉不过，可惜没有2.5G网口，惨遭淘汰。<br />\n6088和6080，jd搞活动，价格相差不大，最终选择了6088，6百多拿下。</p>\n<h2 id=\"刷机openwrt\"><a class=\"markdownIt-Anchor\" href=\"#刷机openwrt\"></a> 刷机openwrt</h2>\n<p>tp家的路由器和米家的不一样，我看很多论坛上说tp的刷机过程比较繁琐。之前玩的红米ax6，刷机已经很繁琐了。我敲，这不会又是一个通宵吧。</p>\n<p>还好小马过河，实际比红米ax6省事不少，利用6088的vpn漏洞，注入刷机包，再通过tftp服务，把recover传入，整体过程一气呵成，大概20分钟，就刷完了。</p>\n<p><img data-src=\"https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230827235738.png\" alt=\"image.png\" /></p>\n<p>具体的参考文章可以看===&gt;<a href=\"https://blog.lishun.me/tl-xdr608x-openwrt-install\">这篇文章</a>，作者很谨慎，传输的文件都加了md5验证文件唯一性，胆大心细，十分nice。</p>\n<h2 id=\"配置openwrt\"><a class=\"markdownIt-Anchor\" href=\"#配置openwrt\"></a> 配置openwrt</h2>\n<p>家里的电线光猫，全国通用密码，直接8080端口找到老web地址，把宽带账号&amp;&amp;密码记下来，删除第三个路由模式，创建一个桥接模式，钩上端口，最后关闭光猫的DHCP。</p>\n<p>openwrt这边就容易多了，我用的是wan6接口拨号上网，其他默认就行。最后设置完Wi-Fi密码，把国家代码改成AU，澳大利亚提高无线功率。</p>\n<h3 id=\"插件\"><a class=\"markdownIt-Anchor\" href=\"#插件\"></a> 插件</h3>\n<p>openwrt最好玩儿的地方。</p>\n<p>我目前安装的插件</p>\n<ul>\n<li>open clash</li>\n<li>smartdns</li>\n<li>upnp</li>\n<li>uu加速器</li>\n</ul>\n<p>smartdns具有很好的dns查询效果，自己设置完上游dns后，网页打开能快不少，不是吹的。</p>\n<p>smartdns作为openclash的上游dns，有很好的加速效果，upnp就不用多说了，必装插件，打游戏嗖嗖滴。</p>\n<p>uu加速器，害，一个臭打游戏的插件，加速主机，要什么小黑盒，都没用。</p>\n<hr />\n<p>简单记录一下新路由器的之旅，openwrt还有很多地方不懂，这周会开始逐步搞懂，最后记录一个通用的图文配置，以备不时之需。</p>\n<p>唉，这周之前不到2刀买的域名过期了，导致我一堆的服务都歇菜了，azure for student 订阅也没多少了，希望黑5能找到好机子，下周会先配置完nvim，然后研究一下ws协议等，没有这些东西，程序员简直没法生活啊。抽空会更新c语言&amp;&amp;汇编。</p>\n",
            "tags": [
                "openwrt"
            ]
        }
    ]
}
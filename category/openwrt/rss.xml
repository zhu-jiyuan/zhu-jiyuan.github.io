<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>ohayo&#39;s blog • Posts by &#34;openwrt&#34; category</title>
        <link>https://blog.hayoo.org</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sun, 17 Sep 2023 12:40:56 +0000</pubDate>
        <lastBuildDate>Sun, 17 Sep 2023 12:40:56 +0000</lastBuildDate>
        <category>math</category>
        <category>openwrt</category>
        <category>log</category>
        <category>vector日志采集</category>
        <category>journal</category>
        <category>note</category>
        <category>tex</category>
        <category>单调栈</category>
        <category>soft</category>
        <category>app</category>
        <category>cpp</category>
        <category>Linux</category>
        <category>python</category>
        <category>shell</category>
        <category>DDNS</category>
        <category>JavaScript</category>
        <category>openProject</category>
        <item>
            <guid isPermalink="true">https://blog.hayoo.org/log/openwrt/shell-ddns/</guid>
            <title>用shell写一个ddns</title>
            <link>https://blog.hayoo.org/log/openwrt/shell-ddns/</link>
            <category>shell</category>
            <category>DDNS</category>
            <pubDate>Sun, 17 Sep 2023 12:40:56 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;ddns&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ddns&#34;&gt;&lt;/a&gt; DDNS&lt;/h2&gt;
&lt;p&gt;假设有这样一种场景，有台服务器的&lt;code&gt;IP&lt;/code&gt;每个一段时间会变化，而我们访问这台机器时，就可能因为这台机器的&lt;code&gt;IP&lt;/code&gt;发生了变化，导致不能访问，必须到那台机器上，获取到新的&lt;code&gt;IP&lt;/code&gt;地址才能进行访问，这十分的痛苦。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DNS&lt;/code&gt;可以把&lt;code&gt;IP&lt;/code&gt;和&lt;code&gt;domain(域名)&lt;/code&gt;进行映射，让我们可以通过域名就可以找到&lt;code&gt;IP&lt;/code&gt;，然后对机器进行访问，如此一来，当服务器&lt;code&gt;IP&lt;/code&gt;发生变化时，我们只需要把域名的&lt;code&gt;DNS&lt;/code&gt;解析换成新的&lt;code&gt;IP&lt;/code&gt;，其他设备用域名访问服务器，就感知不到&lt;code&gt;IP&lt;/code&gt;发生了变化。可是手动档换&lt;code&gt;DNS&lt;/code&gt;解析并不是一个好主意。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DDNS(Dynamic DNS)&lt;/code&gt;可以动态解析&lt;code&gt;IP&lt;/code&gt;，当检测到&lt;code&gt;IP&lt;/code&gt;发生了变化，就会自动换&lt;code&gt;DNS&lt;/code&gt;解析，竟有此等技术，方可高枕无忧。&lt;/p&gt;
&lt;h2 id=&#34;用shell实现一个simple-ddns&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用shell实现一个simple-ddns&#34;&gt;&lt;/a&gt; 用shell实现一个simple DDNS&lt;/h2&gt;
&lt;p&gt;DDNS实现方案很多，最简单粗暴的莫过于&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取本地&lt;code&gt;IP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取域名&lt;code&gt;IP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;比较&lt;code&gt;IP&lt;/code&gt;是否相同，如果相同就使用&lt;code&gt;API&lt;/code&gt;更新&lt;code&gt;DNS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;定时运行上面步骤&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;shell&lt;/code&gt;方案中所用工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dig｜nslookup&lt;/code&gt;等&lt;code&gt;DNS&lt;/code&gt;查询工具获取域名&lt;code&gt;IP&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ip｜ipconfig&lt;/code&gt;等命令获取到本机&lt;code&gt;IP&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl&lt;/code&gt;发送网络请求，进行更换&lt;code&gt;DNS&lt;/code&gt;解析&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 这是ipv6的例子&lt;/span&gt;

&lt;span class=&#34;token assign-left variable&#34;&gt;ipv6_address&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ip&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-6&lt;/span&gt; addr show br-lan &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/inet6 .*global/&amp;#123;gsub(/\/[0-9]+/, &#34;&#34;, $2); print $2&amp;#125;&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token assign-left variable&#34;&gt;ipv6_older&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;dig&lt;/span&gt; AAAA baidu.com +short&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$ipv6_address&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$ipv6_older&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$ipv6_address&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;xxx&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后再用&lt;code&gt;crontab -e&lt;/code&gt;，添加一个定时任务，完结撒花。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.hayoo.org/log/openwrt/openwrt-dns/</guid>
            <title>openwrt插件篇-openclash&amp;adguardhome</title>
            <link>https://blog.hayoo.org/log/openwrt/openwrt-dns/</link>
            <category>openwrt</category>
            <pubDate>Sun, 03 Sep 2023 12:59:49 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;DNS（&lt;strong&gt;D&lt;/strong&gt;omain &lt;strong&gt;N&lt;/strong&gt;ame &lt;strong&gt;S&lt;/strong&gt;ystem），网络域名系统。可以把它对应手机里的联系人，通过联系人的名字就可以找到电话号码，也能通过手机号找到对应联系人的信息，从而能够准确给特定人拨打电话或者发短信等等。而DNS会把网络域名转换成ip，也能把ip转换成网络域名。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903211232.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;adguardhome&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#adguardhome&#34;&gt;&lt;/a&gt; AdguardHome&lt;/h2&gt;
&lt;p&gt;AdguardHome 是一个本地DNS转发器，同时能过滤广告或者网站等，&lt;code&gt;GitHub&lt;/code&gt;开源。下文简称为ADHome。&lt;br /&gt;
值得庆幸的是，ADHome在openwrt上也能用，首先说一下这个软件能带来哪些好处。&lt;/p&gt;
&lt;p&gt;在上图，浏览一个网站时，会先进行DNS查询，获取网站的IP，这个过程十分慢，会极大影响上网体验，其次在我们连接到Wi-Fi上网时，很可能我们正在使用的设备DNS会被劫持，也就是说不是&lt;code&gt;8.8.8.8|1.1.1.1&lt;/code&gt;等公共的DNS服务器，它可能是某个老油条自己搭建的一个，同时把你想访问的网站ip，换成他设定的，这就十分的危险了。&lt;/p&gt;
&lt;p&gt;把DNS默认设置为ADHome的DNS服务端口，你的每一条DNS请求都会走ADHome的DNS服务，就可以防止DNS被劫持，同时为ADHome设置一些公共的DNS服务器上游，在收到DNS请求时，它会并发向这些上游DNS服务器请求，根据你的选择，可以返回最快的，也可以是其他情况。&lt;/p&gt;
&lt;p&gt;如此说来，ADHome兼并smartdns等软件的功能，同时还具备过滤功能，可以设置黑名单来屏蔽广告等。没有理由不装！！！&lt;a href=&#34;https://github.com/rufengsuixing/luci-app-adguardhome&#34;&gt;openwrt链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903214014.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;以下是我的dns备用&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-text&#34; data-language=&#34;text&#34;&gt;&lt;code class=&#34;language-text&#34;&gt;# 上游服务器
114.114.114.114
223.5.5.5
180.76.76.76
1.1.1.1
8.8.8.8
8.8.4.4
117.50.10.10
180.184.1.1
101.101.101.101
https://public.dns.iij.jp/dns-query
https://dns.google/dns-query
https://1.1.1.1/dns-query&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;去广告用的是anti-ad公开的广告库—&amp;gt;&lt;a href=&#34;https://anti-ad.net/easylist.txt&#34;&gt;传送&lt;/a&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903214228.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;openclash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#openclash&#34;&gt;&lt;/a&gt; openclash&lt;/h2&gt;
&lt;p&gt;openclash是clash的openwrt版本，安装完meta内核，基本和电脑端的规则兼容，一套规则，全平台使用，还是很不错滴。&lt;br /&gt;
就不过多写这个了。&lt;/p&gt;
&lt;h2 id=&#34;openclashadhome&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#openclashadhome&#34;&gt;&lt;/a&gt; openclash+ADHome&lt;/h2&gt;
&lt;p&gt;这才是硬路由的终极方案，openclash劫持53端口的DNS转发，同时将openclash的DNS上游设置为ADHome。&lt;br /&gt;
如此一来，DNS请求—&amp;gt;53端口DNS—&amp;gt;openclash—&amp;gt;ADHome。&lt;/p&gt;
&lt;p&gt;openclash配置如下，其中8053为ADHome服务端口。&lt;br /&gt;
&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215059.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;ADHome配置如下&lt;br /&gt;
&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215153.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;dns测速对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dns测速对比&#34;&gt;&lt;/a&gt; DNS测速对比&lt;/h2&gt;
&lt;p&gt;根据使用情况，smartdns与ADHome dns查询速度基本一致，这里对比的是smartdns与正常情况下的DNS。&lt;br /&gt;
速率对比是玄学，主要用途是为了防止DNS被劫持。&lt;/p&gt;
&lt;p&gt;正常情况如下&lt;br /&gt;
&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215643.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用smartdns情况如下&lt;br /&gt;
&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903215805.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;尽管dns查询速度这块是玄学，实际使用上来说，提升是有的，搭配openclash秒开YouTube。&lt;/p&gt;
&lt;p&gt;最后不得不说6088这款路由器，真滴强，openclash➕ADHome等应用一点压力都没。&lt;br /&gt;
&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230903220047.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;想把博客从hexo转移到hugo，之前改的配置，都不记得改了那里，很难受，算了，先这样吧，等11.11买完新电脑，再迁移吧。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.hayoo.org/log/openwrt/tl6088/</guid>
            <title>tl6088刷机之旅</title>
            <link>https://blog.hayoo.org/log/openwrt/tl6088/</link>
            <category>openwrt</category>
            <pubDate>Sun, 27 Aug 2023 15:16:59 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;最近又换了一台路由器，TP-link-6088，因为上个月买了台switch，无论怎么换DNS，下载速度依旧感人至深。转手就把小米AX6000卖了，其实小米AX6000已经能满足我的日常的绝大需求，唯一缺点就是自由度不够，迟来的switch打破昔日的平静。&lt;/p&gt;
&lt;h2 id=&#34;为啥选择tl6088&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#为啥选择tl6088&#34;&gt;&lt;/a&gt; 为啥选择tl6088？&lt;/h2&gt;
&lt;p&gt;对，这是个好问题，身为一个小垃圾佬，先后了解很多路由器，结合我的需求，要能刷openwrt，运行内存至少要512，CPU要好一些，处理网络数据包的同时，要留有余地去跑一些第三方服务。闪存要高一些，至少64。&lt;br /&gt;
最重要的是价格一定要便宜！！！&lt;br /&gt;
如此这般，候选路由器1号----红米ax6000，2号----tl6088，3号----tl6080。&lt;br /&gt;
红米ax6000在配置上几乎与6088完全一样，加上是米家的路由器，再熟悉不过，可惜没有2.5G网口，惨遭淘汰。&lt;br /&gt;
6088和6080，jd搞活动，价格相差不大，最终选择了6088，6百多拿下。&lt;/p&gt;
&lt;h2 id=&#34;刷机openwrt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#刷机openwrt&#34;&gt;&lt;/a&gt; 刷机openwrt&lt;/h2&gt;
&lt;p&gt;tp家的路由器和米家的不一样，我看很多论坛上说tp的刷机过程比较繁琐。之前玩的红米ax6，刷机已经很繁琐了。我敲，这不会又是一个通宵吧。&lt;/p&gt;
&lt;p&gt;还好小马过河，实际比红米ax6省事不少，利用6088的vpn漏洞，注入刷机包，再通过tftp服务，把recover传入，整体过程一气呵成，大概20分钟，就刷完了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/20230827235738.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;具体的参考文章可以看===&amp;gt;&lt;a href=&#34;https://blog.lishun.me/tl-xdr608x-openwrt-install&#34;&gt;这篇文章&lt;/a&gt;，作者很谨慎，传输的文件都加了md5验证文件唯一性，胆大心细，十分nice。&lt;/p&gt;
&lt;h2 id=&#34;配置openwrt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置openwrt&#34;&gt;&lt;/a&gt; 配置openwrt&lt;/h2&gt;
&lt;p&gt;家里的电线光猫，全国通用密码，直接8080端口找到老web地址，把宽带账号&amp;amp;&amp;amp;密码记下来，删除第三个路由模式，创建一个桥接模式，钩上端口，最后关闭光猫的DHCP。&lt;/p&gt;
&lt;p&gt;openwrt这边就容易多了，我用的是wan6接口拨号上网，其他默认就行。最后设置完Wi-Fi密码，把国家代码改成AU，澳大利亚提高无线功率。&lt;/p&gt;
&lt;h3 id=&#34;插件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#插件&#34;&gt;&lt;/a&gt; 插件&lt;/h3&gt;
&lt;p&gt;openwrt最好玩儿的地方。&lt;/p&gt;
&lt;p&gt;我目前安装的插件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;open clash&lt;/li&gt;
&lt;li&gt;smartdns&lt;/li&gt;
&lt;li&gt;upnp&lt;/li&gt;
&lt;li&gt;uu加速器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;smartdns具有很好的dns查询效果，自己设置完上游dns后，网页打开能快不少，不是吹的。&lt;/p&gt;
&lt;p&gt;smartdns作为openclash的上游dns，有很好的加速效果，upnp就不用多说了，必装插件，打游戏嗖嗖滴。&lt;/p&gt;
&lt;p&gt;uu加速器，害，一个臭打游戏的插件，加速主机，要什么小黑盒，都没用。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;简单记录一下新路由器的之旅，openwrt还有很多地方不懂，这周会开始逐步搞懂，最后记录一个通用的图文配置，以备不时之需。&lt;/p&gt;
&lt;p&gt;唉，这周之前不到2刀买的域名过期了，导致我一堆的服务都歇菜了，azure for student 订阅也没多少了，希望黑5能找到好机子，下周会先配置完nvim，然后研究一下ws协议等，没有这些东西，程序员简直没法生活啊。抽空会更新c语言&amp;amp;&amp;amp;汇编。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
